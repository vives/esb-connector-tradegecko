<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<sequence xmlns="http://ws.apache.org/ns/synapse" name="tradegecko_faultsequence">
    <property xmlns:ns="http://org.apache.synapse/xsd" name="contentTypeValue"
              expression="get-property('transport', 'Content-Type')"></property>
    <filter xmlns:ns="http://org.apache.synapse/xsd" source="get-property('ERROR_CODE')"
            regex="[1|3|4][0-9][0-9][0-9][0-9][0-9]">
        <then>
            <property name="HTTP_SC" value="500" scope="axis2"></property>
            <header name="Authorization" scope="transport" action="remove"></header>
            <header name="Host" scope="transport" action="remove"></header>
        </then>
    </filter>
    <filter xmlns:ns="http://org.apache.synapse/xsd"
            xpath="get-property('contentTypeValue') = 'application/json' or get-property('contentTypeValue') = 'text/json'">
        <then>
            <filter xpath="get-property('error_description') = '' or (not(string(get-property('error_description'))))">
                <then>
                    <payloadFactory media-type="json">
                        <format>{ "error_code":"$1", "error_message":"$2" }</format>
                        <args>
                            <arg expression="get-property('ERROR_CODE')" evaluator="xml"></arg>
                            <arg expression="get-property('ERROR_MESSAGE')" evaluator="xml"></arg>
                        </args>
                    </payloadFactory>
                    <property name="messageType" value="application/json" scope="axis2"></property>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{ "error_code":"$1", "error_message":"$2" ,"error_description":"$3" }</format>
                        <args>
                            <arg expression="get-property('ERROR_CODE')" evaluator="xml"></arg>
                            <arg expression="get-property('ERROR_MESSAGE')" evaluator="xml"></arg>
                            <arg expression="get-property('error_description')" evaluator="xml"></arg>
                        </args>
                    </payloadFactory>
                    <property name="messageType" value="application/json" scope="axis2"></property>
                </else>
            </filter>
        </then>
        <else>
            <filter xpath="get-property('error_description') = '' or (not(string(get-property('error_description'))))">
                <then>
                    <payloadFactory media-type="xml">
                        <format>
                            <error_info>
                                <error_code>$1</error_code>
                                <error_message>$2</error_message>
                            </error_info>
                        </format>
                        <args>
                            <arg expression="get-property('ERROR_CODE')" evaluator="xml"></arg>
                            <arg expression="get-property('ERROR_MESSAGE')" evaluator="xml"></arg>
                        </args>
                    </payloadFactory>
                    <property name="messageType" value="application/xml; charset=utf-8" scope="axis2"></property>
                </then>
                <else>
                    <payloadFactory media-type="xml">
                        <format>
                            <error_info>
                                <error_code>$1</error_code>
                                <error_message>$2</error_message>
                                <error_description>$3</error_description>
                            </error_info>
                        </format>
                        <args>
                            <arg expression="get-property('ERROR_CODE')" evaluator="xml"></arg>
                            <arg expression="get-property('ERROR_MESSAGE')" evaluator="xml"></arg>
                            <arg expression="get-property('error_description')" evaluator="xml"></arg>
                        </args>
                    </payloadFactory>
                    <property name="messageType" value="application/xml" scope="axis2"></property>
                </else>
            </filter>
        </else>
    </filter>
    <respond></respond>
</sequence>